{"version":3,"file":"static/js/885.e972136b.chunk.js","mappings":"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","sources":["redux/actions.ts","hooks/useColumns.tsx","hooks/useRecentMenu.tsx","components/CoinTable/CoinTable.tsx","pages/Home/Home.tsx"],"sourcesContent":["import { store } from \".\";\nimport {\n  getResultData,\n  SET_QUERY,\n  SET_RECENT_QUERIES,\n  SET_RESULT_DATA,\n} from \"../utils\";\n\nexport const performSearch = (inputValue: string) => {\n  if (inputValue === \"\") return;\n  if (inputValue.trim().length === 0) return;\n  store.dispatch({ type: SET_QUERY, payload: inputValue });\n  const filteredRecentQueries = store\n    .getState()\n    .recentQueries.filter((itm: string) => itm !== inputValue.trim());\n  store.dispatch({\n    type: SET_RECENT_QUERIES,\n    payload: [inputValue.trim(), ...filteredRecentQueries],\n  });\n  const tempResultData = getResultData(inputValue);\n  store.dispatch({ type: SET_RESULT_DATA, payload: tempResultData });\n};\n","import { useRef, useState } from \"react\";\nimport { Button, Input, InputRef, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport type { ColumnType } from \"antd/lib/table\";\nimport type { FilterConfirmProps } from \"antd/lib/table/interface\";\nimport { formatCurrency, formatNumber, getColorText } from \"../utils\";\nimport { DataIndex } from \"./types\";\nimport { DataType } from \"../redux\";\n\nexport const useColumns: () => any = () => {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchedColumn, setSearchedColumn] = useState(\"\");\n  const searchInput = useRef<InputRef>(null);\n\n  const handleSearch = (\n    selectedKeys: string[],\n    confirm: (param?: FilterConfirmProps) => void,\n    dataIndex: DataIndex\n  ) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters: () => void) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const getColumnSearchProps = (\n    dataIndex: DataIndex\n  ): ColumnType<DataType> => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={searchInput}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            handleSearch(selectedKeys as string[], confirm, dataIndex)\n          }\n          style={{ marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              handleSearch(selectedKeys as string[], confirm, dataIndex)\n            }\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => clearFilters && handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered: boolean) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value: string | number | boolean, record: DataType) =>\n      record[dataIndex]\n        .toString()\n        .toLowerCase()\n        .includes((value as string).toLowerCase()),\n    onFilterDropdownVisibleChange: (visible: boolean) => {\n      if (visible) {\n        setTimeout(() => searchInput.current?.select(), 100);\n      }\n    },\n  });\n  return [\n    {\n      title: \"Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      ...getColumnSearchProps(\"name\"),\n    },\n    {\n      title: \"1Hour change\",\n      dataIndex: \"percent_change_1h\",\n      key: \"percent_change_1h\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.percent_change_1h) - parseInt(b.percent_change_1h),\n      render: (text: string) => (\n        <span className={getColorText(text)}>\n          {text}\n          <b>%</b>\n        </span>\n      ),\n    },\n    {\n      title: \"24Hour Change\",\n      dataIndex: \"percent_change_24h\",\n      key: \"percent_change_24h\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.percent_change_24h) - parseInt(b.percent_change_24h),\n      render: (text: string) => (\n        <span className={getColorText(text)}>\n          {text}\n          <b>%</b>\n        </span>\n      ),\n    },\n    {\n      title: \"7Day Change\",\n      dataIndex: \"percent_change_7d\",\n      key: \"percent_change_7d\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.percent_change_7d) - parseInt(b.percent_change_7d),\n      render: (text: string) => (\n        <span className={getColorText(text)}>\n          {text}\n          <b>%</b>\n        </span>\n      ),\n    },\n    {\n      title: \"Price in USD\",\n      dataIndex: \"price_usd\",\n      key: \"price_usd\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.price_usd) - parseInt(b.price_usd),\n      render: (text: string) => <span>{formatCurrency(text)}</span>,\n    },\n    {\n      title: \"Price in BTC\",\n      dataIndex: \"price_btc\",\n      key: \"price_btc\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.price_btc) - parseInt(b.price_btc),\n      render: (text: string) => (\n        <span>\n          {text}\n          <b>BTC</b>\n        </span>\n      ),\n    },\n    {\n      title: \"Rank\",\n      dataIndex: \"rank\",\n      key: \"rank\",\n      sorter: (a: DataType, b: DataType) => a.rank - b.rank,\n    },\n    {\n      title: \"Symbol\",\n      dataIndex: \"symbol\",\n      key: \"symbol\",\n      ...getColumnSearchProps(\"symbol\"),\n    },\n    {\n      title: \"Current Supply\",\n      dataIndex: \"csupply\",\n      key: \"csupply\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.csupply) - parseInt(b.csupply),\n      render: (text: string) => <span>{formatNumber(text)}</span>,\n    },\n    {\n      title: \"Total Supply\",\n      dataIndex: \"tsupply\",\n      key: \"tsupply\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.tsupply) - parseInt(b.tsupply),\n      render: (text: string) => <span>{formatNumber(text)}</span>,\n    },\n    {\n      title: \"Volume 24Hr\",\n      dataIndex: \"volume24\",\n      key: \"volume24\",\n      sorter: (a: DataType, b: DataType) => a.volume24 - b.volume24,\n      render: (text: string) => <span>{formatNumber(text)}</span>,\n    },\n    {\n      title: \"Volume 24Hr A\",\n      dataIndex: \"volume24a\",\n      key: \"volume24a\",\n      sorter: (a: DataType, b: DataType) => a.volume24a - b.volume24a,\n      render: (text: string) => <span>{formatNumber(text)}</span>,\n    },\n    {\n      title: \"Market Cap(USD)\",\n      dataIndex: \"market_cap_usd\",\n      key: \"market_cap_usd\",\n      sorter: (a: DataType, b: DataType) =>\n        parseInt(a.market_cap_usd) - parseInt(b.market_cap_usd),\n      render: (text: string) => <span>{formatCurrency(text)}</span>,\n    },\n  ];\n};\n","import { Empty, Menu } from \"antd\";\nimport { HistoryOutlined } from \"@ant-design/icons\";\nimport { store, performSearch } from \"../redux\";\n\nconst getMenuObject = () => {\n  const recentQueries = store.getState().recentQueries;\n  if (recentQueries.length) {\n    return recentQueries.map((itm: string) => ({\n      key: itm,\n      label: (\n        <>\n          <span className=\"dim-text\">\n            <HistoryOutlined />\n          </span>\n          &nbsp;&nbsp;\n          <span onClick={() => performSearch(itm)}>\n            <b>{itm}</b>\n          </span>\n        </>\n      ),\n    }));\n  } else {\n    return [\n      {\n        key: 1,\n        label: <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />,\n      },\n    ];\n  }\n};\n\nexport const useRecentMenu: () => any = () => {\n  const menuItems = getMenuObject();\n  return <Menu items={menuItems} />;\n};\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { useColumns } from \"../../hooks\";\nimport { StateTypes } from \"../../redux\";\n\nimport \"./CoinTable.css\";\n\nconst CoinTable: React.FC = () => {\n  const columns = useColumns();\n  const resultData = useSelector((state: StateTypes) => state.resultData);\n\n  return (\n    <div className=\"table-wrapper\">\n      <Table columns={columns} dataSource={resultData} />\n    </div>\n  );\n};\n\nexport default CoinTable;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Input, Button, Dropdown } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DownOutlined, SearchOutlined } from \"@ant-design/icons\";\nimport { StateTypes, performSearch } from \"../../redux\";\nimport Table from \"../../components/CoinTable\";\nimport { useRecentMenu } from \"../../hooks\";\n\nimport \"./Home.scss\";\n\nconst Home: React.FC = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const query = useSelector((state: StateTypes) => state.query);\n  const resultData = useSelector((state: StateTypes) => state.resultData);\n  const recentMenu = useRecentMenu();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setInputValue(query);\n  }, [query]);\n\n  const marginStyle = { marginRight: \"10px\" };\n\n  const inputTextAreaStyle = { width: \"400px\" };\n\n  return (\n    <div className=\"home\">\n      <header className=\"header\">\n        <Input.TextArea\n          allowClear\n          value={inputValue}\n          placeholder=\"Query your SQL here ...\"\n          style={inputTextAreaStyle}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <span className=\"header-content\">\n          <Button\n            type=\"primary\"\n            style={marginStyle}\n            onClick={() => performSearch(inputValue)}\n            disabled={inputValue.trim().length === 0}\n          >\n            <SearchOutlined /> Search\n          </Button>\n          <Dropdown\n            overlay={recentMenu}\n            placement=\"bottom\"\n            trigger={[\"click\"]}\n            arrow={{ pointAtCenter: true }}\n          >\n            <Button style={marginStyle}>\n              Recent searches <DownOutlined />\n            </Button>\n          </Dropdown>\n        </span>\n      </header>\n      {query.trim().length > 0 && (\n        <section className=\"info\">\n          <div className=\"query\">\n            <span className=\"tag\">\n              <b>{resultData.length}</b> rows found!, using SQL query{\" \"}\n              <b>{query}</b>\n              <Button\n                type=\"link\"\n                size=\"small\"\n                disabled={query.trim().length === 0}\n                onClick={() => navigate(\"/peek\")}\n              >\n                Peek raw result data\n              </Button>\n            </span>\n          </div>\n        </section>\n      )}\n      <Table />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["performSearch","inputValue","trim","length","store","type","SET_QUERY","payload","filteredRecentQueries","recentQueries","filter","itm","SET_RECENT_QUERIES","tempResultData","getResultData","SET_RESULT_DATA","useColumns","useState","setSearchText","setSearchedColumn","searchInput","useRef","handleSearch","selectedKeys","confirm","dataIndex","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","style","padding","ref","placeholder","value","onChange","e","target","onPressEnter","marginBottom","display","onClick","icon","SearchOutlined","size","width","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","title","key","sorter","a","b","parseInt","percent_change_1h","render","text","className","getColorText","percent_change_24h","percent_change_7d","price_usd","formatCurrency","price_btc","rank","csupply","formatNumber","tsupply","volume24","volume24a","market_cap_usd","useRecentMenu","menuItems","map","label","HistoryOutlined","image","Empty","getMenuObject","items","columns","resultData","useSelector","state","dataSource","setInputValue","query","recentMenu","navigate","useNavigate","useEffect","marginStyle","marginRight","allowClear","disabled","overlay","placement","trigger","arrow","pointAtCenter","DownOutlined"],"sourceRoot":""}